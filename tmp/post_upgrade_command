#!/bin/sh

/etc/rc.conf_mount_rw

PFSENSETYPE=`cat /etc/platform`
KERNELTYPE=`cat /boot/kernel/pfsense_kernel.txt`

if [ $KERNELTYPE = "wrap" ]; then
	if [ -f /kernels/kernel_wrap.gz ]; then 
		tar xzpf /kernels/kernel_wrap.gz --exclude loader.conf -C /boot/
		cp /etc/ttys_wrap /etc/ttys
	fi
fi
if [ $KERNELTYPE = "Developers" ]; then
	if [ -f /kernels/kernel_Dev.gz ]; then 
		tar xzpf /kernels/kernel_Dev.gz --exclude loader.conf -C /boot/
		cp  /boot/kernel/kernel.gz
	fi
fi
if [ $KERNELTYPE = "SMP" ]; then
	if [ -f /kernels/kernel_SMP.gz ]; then 
		tar xzpf /kernels/kernel_SMP.gz --exclude loader.conf -C /boot/
	fi
fi
if [ $KERNELTYPE = "UP" ]; then
	if [ -f /kernels/kernel_SMP.gz ]; then 
		tar xzpf /kernels/kernel_uniprocessor.gz --exclude loader.conf -C /boot/
	fi
fi

if [ $PFSENSETYPE = "pfSense" ] || [ $PFSENSETYPE = "nanobsd" ]; then
	touch /conf/needs_package_sync
fi

# Detect interactive logins and display the shell
echo "if [ \`env | grep SSH_TTY | wc -l\` -gt 0 ] || [ \`env | grep cons25 | wc -l\` -gt 0 ]; then" > $CVS_CO_DIR/root/.shrc
echo "        /etc/rc.initial" >> $CVS_CO_DIR/root/.shrc
echo "        exit" >> $CVS_CO_DIR/root/.shrc
echo "fi" >> $CVS_CO_DIR/root/.shrc
echo "if [ \`env | grep SSH_TTY | wc -l\` -gt 0 ] || [ \`env | grep cons25 | wc -l\` -gt 0 ]; then" >> $CVS_CO_DIR/root/.profile
echo "        /etc/rc.initial" >> $CVS_CO_DIR/root/.profile
echo "        exit" >> $CVS_CO_DIR/root/.profile
echo "fi" >> $CVS_CO_DIR/root/.profile

# Now turn on or off serial console as needed
/tmp/post_upgrade_command.php

# Remove any previous MD5 sum files
rm -f /root/*.md5

# File moved to pfSense php shell (pfSsh.php)
rm -rf /usr/local/sbin/cvs_sync.sh

if [ $PFSENSETYPE = "embedded" ]; then
	cp /etc/ttys_wrap /etc/ttys
fi

if [ -f /usr/local/sbin/php ]; then
	rm /usr/local/sbin/php
fi
